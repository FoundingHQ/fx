import { NextApiRequest, NextApiResponse } from "next";
import { error } from "next/dist/build/output/log";
import nc from "next-connect";

import { trustProxyMiddleware } from "@api/middlewares/trust-proxy";

export type AppRequest = NextApiRequest & {};
export type AppResponse = NextApiResponse & {};

const middlewares = [trustProxyMiddleware];

const createHandler = (options = {}) => {
  return nc<AppRequest, AppResponse>({
    onError: (err, _, res) => {
      error(err);
      res.status(500).end(err.toString());
    },
    onNoMatch: (_, res) => {
      res.status(404).end("Page is not found");
    },
    ...options,
  }).use(...middlewares);
};

export default createHandler;
