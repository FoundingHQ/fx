import { useState } from "react";
import { <%- p.pascalName %>Form } from "@lib/<%- p.paramName %>/ui/<%- p.pascalName %>Form";
import { use<%- p.pascalName %>List } from "@lib/<%- p.paramName %>/data/<%- p.camelName %>Hooks";
import { <%- p.pascalName %> } from "@prisma/client";

const DetailView = ({ data }: { data?: <%- p.pascalName %> }) => {
  const [isEdit, setIsEdit] = useState(false);

  if (!data) {
    return <<%- p.pascalName %>Form />;
  }

  if (isEdit) {
    return (
      <div>
        <button type="button" onClick={() => setIsEdit(!isEdit)}>
          Cancel
        </button>
        <<%- p.pascalName %>Form id={data.id} />
      </div>
    );
  }

  return (
    <div>
      <button type="button" onClick={() => setIsEdit(!isEdit)}>
        Edit
      </button>
      <div>
        <% Object.values(props.attributes).forEach((attr) => { %>
          <div>{data?.<%- attr.camelName %> || ""}</div>
        <% }) %>
      </div>
    </div>
  );
};

export const <%- p.pascalName %>Page = () => {
  const [showForm, setShowForm] = useState(false);
  const { data } = use<%- p.pascalName %>List();

  if (data) {
    return (
      <div>
        <button type="button" onClick={() => setShowForm(!showForm)}>
          Add New
        </button>
        {showForm && <DetailView />}
        {!!data.list.length &&
          data.list.map((<%- p.camelName %>) => (
            <DetailView key={<%- p.camelName %>.id} data={<%- p.camelName %>} />
          ))}
        {!data.list.length && <div>No data to show</div>}
      </div>
    );
  }

  return "Loading...";
};

export default <%- p.pascalName %>Page;
