import { prisma } from "@api/prisma";
import { Prisma } from "@prisma/client";
import { <%- p.pascalName %> } from "@lib/<%- p.paramName %>/data/<%- p.camelName %>Schema"

export const <%- p.getListName %> = async () => {
  const list = await prisma.<%- p.camelName %>.findMany();

  return list;
};

export const <%- p.getName %> = async (input: <%- p.idTypeName %>) => {
  const <%- p.camelName %> = await prisma.<%- p.camelName %>.findUnique({
    where: { id: input.id },
  });

  return <%- p.camelName %>;
};

export const <%- p.createName %> = async (input: <%- p.createInputTypeName %>) => {
  const { id, ...data } = input;
  const created = await prisma.<%- p.camelName %>.create({
    data,
  });

  return created;
};

export const <%- p.updateName %> = async (
  input: <%- p.updateInputTypeName %>
) => {
  const { id, ...data } = input;
  const updated = await prisma.<%- p.camelName %>.update({
    where: { id },
    data,
  });

  return updated;
};

export const <%- props.deleteName %> = async (input: <%- p.idTypeName %>) => {
  const deleted = prisma.<%- p.camelName %>.delete({
    where: { id: input.id },
  });

  return deleted;
};
