import { GetServerSideProps } from "next";
import { useState } from "react";
import { <%- p.pascalName %>Form } from "@lib/<%- p.paramName %>/ui/<%- p.pascalName %>Form";
import { use<%- p.pascalName %>List, hydrate<%- p.pascalName %>List } from "@lib/<%- p.paramName %>/data/<%- p.camelName %>Hooks";
import { <%- p.pascalName %> } from "@lib/<%- p.paramName %>/data/<%- p.camelName %>Schema";

const DetailView = ({
  data,
  onEdit,
}: {
  data: <%- p.pascalName %>;
  onEdit: (id: <%- p.pascalName %>["id"]) => void;
}) => {
  return (
    <tr>
      <% Object.values(props.attributes).forEach((attr) => { -%>
        <td>{data.<%- attr.camelName %>}</td>
      <% }) -%>
      <td>
        <button
          type="button"
          className="secondary"
          onClick={() => onEdit(data.id)}
        >
          Edit
        </button>
      </td>
    </tr>
  );
};

export const Page = () => {
  const [editing, setEditing] = useState<false | string>(false);
  const { data } = use<%- p.pascalName %>List();

  if (data) {
    return (
      <>
        <nav>
          <h1><%- p.pascalName %>s</h1>
          <button type="button" onClick={() => setEditing("")}>
            Create
          </button>
        </nav>
        <main>
          {editing !== false && (
            <dialog key={editing} open>
              <<%- p.pascalName %>Form
                id={editing}
                onComplete={() => setEditing(false)}
              />
            </dialog>
          )}
          {!data.list.length && <div>No data to show</div>}
          {!!data.list.length && (
            <table>
              <thead>
                <tr>
                  <% Object.values(props.attributes).forEach((attr) => { -%>
                    <th><%- attr.pascalName %></th>
                  <% }) -%>
                  <th><span hidden>Edit</span></th>
                </tr>
              </thead>
              <tbody>
                {data.list.map((<%- p.camelName %>) => (
                  <DetailView
                    key={<%- p.camelName %>.id}
                    data={<%- p.camelName %>}
                    onEdit={(id) => setEditing(id)}
                  />
                ))}
              </tbody>
            </table>
          )}
        </main>
      </>
    );
  }

  return "Loading...";
};

export const getServerSideProps: GetServerSideProps = async (context) => {
  const res = await hydrate<%- p.pascalName %>List(context);
  return res;
};

// Some basic styles, remove this block after generation.
Page.getLayout = (page: React.ReactElement) => {
  return (
    <>
      <link
        rel="stylesheet"
        href="https://unpkg.com/headlesscss@latest/css/headless.min.css"
      />
      {page}
    </>
  );
};

export default Page;
