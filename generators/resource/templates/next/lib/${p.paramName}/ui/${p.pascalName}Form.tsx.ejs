import {
  use<%- p.pascalName %>,
  use<%- p.pascalName %>Create,
  use<%- p.pascalName %>Update,
  use<%- p.pascalName %>Delete,
} from "@lib/<%- p.paramName %>/data/<%- p.camelName %>Hooks";
import { <%- p.pascalName %> } from "@lib/<%- p.paramName %>/data/<%- p.camelName %>Schema"

type Props = {
  id?: <%- p.pascalName %>["id"];
  onComplete?: (data?: <%- p.pascalName %>) => void;
};

export const <%- p.pascalName %>Form = ({ id, onComplete }: Props) => {
  const { data } = use<%- p.pascalName %>({ id: id || "" });
  const { mutateAsync: create } = use<%- p.pascalName %>Create();
  const { mutateAsync: update } = use<%- p.pascalName %>Update();
  const { mutateAsync: remove } = use<%- p.pascalName %>Delete();

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    const data = new FormData(e.target as HTMLFormElement);
    const input = Object.fromEntries(data.entries()) as <%- p.pascalName %>;
    const action = input.id ? update : create;
    try {
      const response = await action(input);
      onComplete && onComplete(response);
    } catch (error) {
      console.error(error);
    }
  };

  const handleDelete = () => {
    if (data) {
      remove(data);
      onComplete && onComplete(data);
    }
  };

  const handleCancel = () => {
    onComplete && onComplete();
  };

  return (
    <form onSubmit={handleSubmit}>
      <header>
        <h3>{data ? "Update <%- p.pascalName %>" : "Create New <%- p.pascalName %>"}</h3>
      </header>
      <input type="hidden" name="id" value={data?.id || ""} />
      <% Object.values(props.attributes).forEach((attr) => { -%>
        <label htmlFor="<%- attr.name %>"><%- attr.pascalName %></label>
        <input
          id="<%- attr.name %>"
          name="<%- attr.name %>"
          type="text"
          placeholder="<%- p.pascalName %> <%- attr.camelName %>"
          defaultValue={data?.<%- attr.camelName %> || ""}
        />
      <% }) -%>
      <footer>
        {data ? (
          <button type="button" className="secondary" onClick={handleDelete}>
            Delete
          </button>
        ) : (
          <button type="button" className="secondary" onClick={handleCancel}>
            Cancel
          </button>
        )}
        <button type="submit">{data ? "Update" : "Create"}</button>
      </footer>
    </form>
  );
};

export default <%- p.pascalName %>Form;
